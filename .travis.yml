language: rust
sudo: true
rust:
  - stable
  - beta
  - nightly
env:
  global:
    - RUST_BACKTRACE=1
    - RUSTFLAGS="-C link-dead-code"
    - KCOV_VERSION=33
before_install:
  - sudo apt-get update
addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - gdb
script:
  - cargo install --debug cargo-make
  - cargo make --task ci-flow
after_script:
  - echo "Running coverage"
  - wget https://github.com/SimonKagstrom/kcov/archive/v$KCOV_VERSION.zip
  - unzip v$KCOV_VERSION.zip
  - cd kcov-$KCOV_VERSION
  - mkdir build
  - cd ./build
  - cmake ..
  - make
  - sudo make install
  - cd ../..
  - rm -rf kcov-$KCOV_VERSION
  - ls ./target/debug/deps
  - mkdir -p ./target/coverage
  - for file in target/debug/deps/cargo_make*; do if "$file" ; then echo "Running $file"; kcov --verify --debug=4 --exclude-pattern=main.rs --include-pattern=${TRAVIS_BUILD_DIR}/src/ "target/coverage" "$file" || true; fi; done
  - COREFILE=$(find . -maxdepth 1 -name "core*" | head -n 1)
  - echo "Core file location:"
  - echo $COREFILE
  - if [[ -f "$COREFILE" ]]; then gdb -c "$COREFILE" example -ex "thread apply all bt" -ex "set pagination 0" -batch; fi
  - ls -ls ./target/coverage/cargo_make*
  - bash <(curl -s https://codecov.io/bash)
  - echo "Uploaded code coverage"
before_script:
  - ulimit -c unlimited -S       # enable core dumps