
[config]
skip_core_tasks = true

[env]
SIMPLE = "SIMPLE VALUE"
SCRIPT = { script = ["echo SCRIPT VALUE"] }
COMPOSITE = "simple value: ${SIMPLE} script value: ${SCRIPT}"
ECHO_CMD = "echo"
MULTI_LINE_SCRIPT = { script = ["echo 1\necho 2"], multi_line = true }
BOOL_VALUE = true
LIBRARY_EXTENSION = { source = "${CARGO_MAKE_RUST_TARGET_OS}", default_value = "unknown", mapping = {"linux" = "so", "macos" = "dylib", "windows" = "dll", "openbsd" = "so" } }
TO_UNSET = { unset = true }

[tasks.echo]
script = [
    "echo var: ${SKIP_TASK}",
    "echo hello"
]

[tasks.wrapper]
condition = { env_not_set = [ "SKIP_TASK" ] }
run_task = "echo"

[tasks.test-flow]
env = { "SKIP_TASK" = true }
run_task = "wrapper"

[tasks.echo-env]
script_runner = "@shell"
script = [
    "echo SIMPLE: ${SIMPLE}",
    "echo SCRIPT: ${SCRIPT}",
    "echo BOOL_VALUE: ${BOOL_VALUE}",
    "echo COMPOSITE: ${COMPOSITE}",
    "echo LIBRARY_EXTENSION: ${LIBRARY_EXTENSION}"
]

[tasks.init]
env = { "IS_LINUX" = "NOPE" }
script = [
    "echo IS_LINUX: ${IS_LINUX}"
]

[tasks.init.linux]
env = { "IS_LINUX" = "YAP" }

[tasks.expand]
command = "${ECHO_CMD}"
args = [
    "VALUE: ${SIMPLE}"
]

[tasks.multi-line]
script = [
    "echo multi line output:",
    "echo ${MULTI_LINE_SCRIPT}"
]

[tasks.namespace-prefix]
env = { "CARGO_MAKE_MEMBER_TASK" = "${CARGO_MAKE_CORE_TASK_NAMESPACE_PREFIX}my-task" }
script = [
    "echo ${CARGO_MAKE_MEMBER_TASK}"
]
